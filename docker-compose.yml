version: '2'
services:
  order:
    container_name: order
    build:
      context: order/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - jaeger
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - SERVICE_NAME=order-service

  warehouse:
    container_name: warehouse
    build:
      context: warehouse/
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - order
      - jaeger
      - kafka
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - SERVICE_NAME=warehouse-service

  finance:
    container_name: finance
    build:
      context: finance/
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    depends_on:
      - warehouse
      - jaeger
      - kafka
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - SERVICE_NAME=finance-service

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=banking
      - MYSQL_USER=demo
      - MYSQL_PASSWORD=demo
    ports:
      - "3307:3306"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # the jaeger UI
      - "4317:4317" # the OpenTelemetry collector grpc
      - "4318:4318" # the OpenTelemetry collector http
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

